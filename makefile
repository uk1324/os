BUILD_DIR := ./build
SRC_DIR := ./src

OUT_BIN := $(BUILD_DIR)/os.out

QEMU := qemu-system-i386.exe

AS := i686-elf-as
G++ := i686-elf-g++
LD := i686-elf-ld

G++_INCLUDE_DIRS := $(SRC_DIR)

AS_FLAGS := -msyntax=intel -mnaked-reg

# "-c" - Only compile don't link
G++_FLAGS := -std=c++2a -ffreestanding -O2 -fno-exceptions -fno-rtti -c \
	-masm=intel \
	-DKERNEL_DEBUG \
	-I $(G++_INCLUDE_DIRS) \
	-pedantic -Wall -Wextra -Wconversion

CPP_FILES := $(shell find $(SRC_DIR) -type f -name "*.cpp")
ASM_FILES := $(shell find $(SRC_DIR) -type f -name "*.s")

OBJ_FILES := $(patsubst $(SRC_DIR)/%.cpp, $(BUILD_DIR)/%.o, $(CPP_FILES)) \
			 $(patsubst $(SRC_DIR)/%.s, $(BUILD_DIR)/%.o, $(ASM_FILES))

.PHONY: all
all: $(OUT_BIN)

$(OUT_BIN): $(OBJ_FILES)
	$(LD) -T link.ld -o $(OUT_BIN) $^

$(BUILD_DIR)/%.o: $(SRC_DIR)/%.cpp
	mkdir -p $(@D)
	$(G++) $(G++_FLAGS) -o $@ $<

# https://www.gnu.org/software/make/manual/html_node/Automatic-Prerequisites.html
# https://stackoverflow.com/questions/12061410/how-to-replace-a-path-with-another-path-in-sed
# Header dependencies of c++ files are saved in .d file in the build directory for every .cpp file
# They are generated by GCC's -MM option which outputs
# <not_full_path_to_the_file_only_filename>: <paths_to_included_header_files>
# Then use sed to replace everything up to the ':' with <full_path_to_the_file> <path_to_the_d_file>
# Then the d files are included so now the files are rebuild every time any of the headers it includes is modified.

D_FILES := $(patsubst $(SRC_DIR)/%.cpp, $(BUILD_DIR)/%.d, $(CPP_FILES))
include $(D_FILES)

$(BUILD_DIR)/%.d: $(SRC_DIR)/%.cpp
	mkdir -p $(@D)
	@set -e; rm -f $@
	$(G++) -MM $(G++_FLAGS) $< > $@;
	sed -i 's+.*:+$(patsubst %.d, %.o, $@) $@:+' $@
#	mkdir -p $(@D)
#	@set -e; rm -f $@
#	$(G++) -MM $(G++_FLAGS) $< > $@.$$$$; \
#	sed 's+.*:+$(patsubst %.d, %.o, $@) $@:+' < $@.$$$$ > $@ \
#	rm -f $@.$$$$

$(BUILD_DIR)/%.o: $(SRC_DIR)/%.s
	mkdir -p $(@D)
	$(AS) $(AS_FLAGS) -o $@ $<

.PHONY: run
run:
	$(QEMU) -serial stdio -kernel $(OUT_BIN)

.PHONY: clean
clean:
	rm -r build
